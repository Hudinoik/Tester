const express=require("express");const sqlite3=require("sqlite3").verbose();const bcrypt=require("bcrypt");const jwt=require("jsonwebtoken");const cors=require("cors");const path=require("path");
const app=express();const PORT=process.env.PORT||3000;const SECRET=process.env.SECRET||"change_me";const DB_PATH=process.env.DB_PATH||path.join(__dirname,"db.sqlite");
app.use(cors());app.use(express.json());app.use(express.static(path.join(__dirname,"../frontend")));
const db=new sqlite3.Database(DB_PATH);
db.serialize(()=>{db.run(`CREATE TABLE IF NOT EXISTS shuls(id INTEGER PRIMARY KEY AUTOINCREMENT,name TEXT NOT NULL,address TEXT DEFAULT '',area TEXT DEFAULT '')`);
db.run(`CREATE TABLE IF NOT EXISTS users(id INTEGER PRIMARY KEY AUTOINCREMENT,email TEXT UNIQUE NOT NULL,password TEXT NOT NULL,role TEXT NOT NULL CHECK(role IN('superadmin','admin','manager')),shulId INTEGER,FOREIGN KEY(shulId) REFERENCES shuls(id))`);
db.run(`CREATE TABLE IF NOT EXISTS minyanim(id INTEGER PRIMARY KEY AUTOINCREMENT,shulId INTEGER NOT NULL,type TEXT NOT NULL,time TEXT NOT NULL,note TEXT DEFAULT '',FOREIGN KEY(shulId) REFERENCES shuls(id))`);});
const initialShuls=[
"Adass Yeshurun Synagogue (Glenhazel)","Aish HaTorah Johannesburg (Glenhazel)","Chabad of Illovo","Chabad of Norwood","Chabad of Savoy","Chabad of Strathavon (often spelled Strathhaven)","Chabad Yeshiva – Main Campus (one of the 2 Chabad yeshivas)","Chabad Yeshiva – Secondary Campus (the second Chabad yeshiva)","Chofetz Chaim","Duek Neitz Minyan (Glenhazel)","Hama’or Centre – Chabad of Savoy Estate","Keter Torah Synagogue (Glenhazel)","Kollel Yad Shaul (Glenhazel)","Linksfield-Senderwood Hebrew Congregation (LinkShul)","Lunchtime Mincha at Melrose Arch","Maharsha Beis Aharon Synagogue (Glenhazel)","Melrose Arch Minyan","Mizrachi Yeshiva College Shul (Glenhazel)","Norwood Shteibel (Norwood)","Ohr Somayach Glenhazel","Ohr Somayach Savoy","Ohr Somayach of Gallo Manor","Pine Street Shul (Glenhazel)","Pretoria Hebrew Congregation (Pretoria Shul)","Rabbi Hendler’s Shul (Sydenham area)","Rabbi Moffson’s Shul (Glenhazel)","Rav Tanzer’s Shul – Yeshiva College Campus","Sandton Shul (Beth Hamedrash Hagadol Sandton)","Shaarei Chayim Synagogue (Glenhazel)","Shomer Emunim Synagogue (Glenhazel)","Sunny Road Kehilla (Glenhazel)","Sydenham Highlands North Hebrew Congregation (Sydenham Shul)","Torah Academy Shul (Glenhazel)","Yeshiva Gedolah of Johannesburg","Young Chabad Minyan (Glenhazel)","Young Israel of South Africa (YISA)","The Beis Shul (Glenhazel)"];
const ADMIN_EMAIL=process.env.ADMIN_EMAIL;const ADMIN_PASSWORD=process.env.ADMIN_PASSWORD;const ADMIN_ROLE=process.env.ADMIN_ROLE||"superadmin";
db.get("SELECT COUNT(*) AS c FROM shuls",(e,r)=>{if(!e&&r&&r.c===0){const s=db.prepare("INSERT INTO shuls(name,address,area) VALUES(?,?,?)");initialShuls.forEach(n=>s.run(n,"",""));s.finalize(()=>console.log("Seeded shuls"));}});
db.get("SELECT COUNT(*) AS c FROM users",(e,r)=>{if(!e&&r&&r.c===0&&ADMIN_EMAIL&&ADMIN_PASSWORD){bcrypt.hash(ADMIN_PASSWORD,10).then(h=>{db.run("INSERT INTO users(email,password,role) VALUES(?,?,?)",[ADMIN_EMAIL,h,ADMIN_ROLE],err=>{if(err)console.error(err);else console.log("Seeded superadmin");});});}else if(!e&&r&&r.c===0){console.warn("Set ADMIN_EMAIL and ADMIN_PASSWORD to seed first superadmin.");}});
function authRequired(req,res,next){const t=req.headers.authorization?.split(" ")[1];if(!t)return res.status(401).json({error:"No token"});jwt.verify(t,SECRET,(e,u)=>{if(e)return res.status(403).json({error:"Invalid token"});req.user=u;next();});}
function roles(...a){return (req,res,next)=>{if(!req.user||!a.includes(req.user.role))return res.status(403).json({error:"Forbidden"});next();};}
app.get("/healthz",(req,res)=>res.json({ok:true}));
app.post("/login",(req,res)=>{const{email,password}=req.body;db.get("SELECT * FROM users WHERE email=?",[email],async(e,u)=>{if(e)return res.status(500).json({error:"DB error"});if(!u)return res.status(400).json({error:"User not found"});const ok=await bcrypt.compare(password,u.password);if(!ok)return res.status(400).json({error:"Wrong password"});const token=jwt.sign({id:u.id,role:u.role,shulId:u.shulId},SECRET,{expiresIn:"2d"});res.json({token,role:u.role,shulId:u.shulId});});});
app.get("/users",authRequired,roles("superadmin"),(req,res)=>{db.all("SELECT u.id,u.email,u.role,u.shulId,s.name AS shulName FROM users u LEFT JOIN shuls s ON s.id=u.shulId ORDER BY u.role DESC,u.email",[],(e,rows)=>{if(e)return res.status(500).json({error:"DB error"});res.json(rows);});});
app.post("/users",authRequired,roles("superadmin"),async(req,res)=>{const{email,password,role,shulId}=req.body;if(!email||!password||!role)return res.status(400).json({error:"Missing fields"});const hash=await bcrypt.hash(password,10);db.run("INSERT INTO users(email,password,role,shulId) VALUES(?,?,?,?)",[email,hash,role,shulId||null],function(err){if(err)return res.status(400).json({error:err.message});res.json({id:this.lastID});});});
app.put("/users/:id",authRequired,roles("superadmin"),async(req,res)=>{const id=parseInt(req.params.id,10);const{role,shulId,password}=req.body;const u=[];const p=[];if(role){u.push("role=?");p.push(role);}if(typeof shulId!=="undefined"){u.push("shulId=?");p.push(shulId||null);}if(password){const h=await bcrypt.hash(password,10);u.push("password=?");p.push(h);}if(!u.length)return res.json({updated:0});p.push(id);db.run(`UPDATE users SET ${u.join(", ")} WHERE id=?`,p,function(err){if(err)return res.status(400).json({error:err.message});res.json({updated:this.changes});});});
app.delete("/users/:id",authRequired,roles("superadmin"),(req,res)=>{const id=parseInt(req.params.id,10);db.run("DELETE FROM users WHERE id=?",[id],function(err){if(err)return res.status(400).json({error:err.message});res.json({deleted:this.changes});});});
app.get("/shuls",(req,res)=>{db.all("SELECT * FROM shuls ORDER BY name COLLATE NOCASE",[],(e,shuls)=>{if(e)return res.status(500).json({error:"DB error"});const ids=shuls.map(s=>s.id);if(ids.length===0)return res.json([]);db.all(`SELECT * FROM minyanim WHERE shulId IN (${ids.map(()=>"?").join(",")}) ORDER BY type,time`,ids,(e2,mins)=>{if(e2)return res.status(500).json({error:"DB error"});const g={};mins.forEach(m=>{(g[m.shulId]=g[m.shulId]||[]).push(m);});res.json(shuls.map(s=>({...s,minyanim:g[s.id]||[]})));});});});
app.post("/shuls",authRequired,roles("superadmin","admin"),(req,res)=>{const{name,address,area}=req.body;if(!name)return res.status(400).json({error:"Missing name"});db.run("INSERT INTO shuls(name,address,area) VALUES(?,?,?)",[name,address||"",area||""],function(err){if(err)return res.status(400).json({error:err.message});res.json({id:this.lastID});});});
app.put("/shuls/:id",authRequired,(req,res)=>{const id=parseInt(req.params.id,10);const{name,address,area}=req.body;if(req.user.role!=="superadmin"&&req.user.role!=="admin"&&req.user.shulId!==id){return res.status(403).json({error:"No permission"});}db.run("UPDATE shuls SET name=?,address=?,area=? WHERE id=?",[name||"",address||"",area||"",id],function(err){if(err)return res.status(400).json({error:err.message});res.json({updated:this.changes});});});
app.put("/shuls/:id/minyanim",authRequired,(req,res)=>{const id=parseInt(req.params.id,10);const items=Array.isArray(req.body)?req.body:[];if(req.user.role!=="superadmin"&&req.user.role!=="admin"&&req.user.shulId!==id){return res.status(403).json({error:"No permission"});}db.serialize(()=>{db.run("DELETE FROM minyanim WHERE shulId=?",[id],err=>{if(err)return res.status(400).json({error:err.message});if(items.length===0)return res.json({replaced:0});const st=db.prepare("INSERT INTO minyanim(shulId,type,time,note) VALUES(?,?,?,?)");items.forEach(it=>st.run(id,it.type,it.time,it.note||""));st.finalize(e=>{if(e)return res.status(400).json({error:e.message});res.json({replaced:items.length});});});});});
app.delete("/shuls/:id",authRequired,roles("superadmin","admin"),(req,res)=>{const id=parseInt(req.params.id,10);db.run("DELETE FROM shuls WHERE id=?",[id],function(err){if(err)return res.status(400).json({error:err.message});db.run("DELETE FROM minyanim WHERE shulId=?",[id],()=>{});res.json({deleted:this.changes});});});
app.get("/",(req,res)=>res.sendFile(path.join(__dirname,"../frontend/index.html")));
app.listen(PORT,()=>console.log("Server running on "+PORT));